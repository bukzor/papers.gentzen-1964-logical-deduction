#!/usr/bin/env python3
"""Convert JSTOR metadata to Crossref/DOI format."""

import json
import re
import sys

MONTHS = {
    "Jan": 1,
    "Feb": 2,
    "Mar": 3,
    "Apr": 4,
    "May": 5,
    "Jun": 6,
    "Jul": 7,
    "Aug": 8,
    "Sep": 9,
    "Oct": 10,
    "Nov": 11,
    "Dec": 12,
}


def parse_issue(issue_str):
    """Parse 'Vol. 1, No. 4 (Oct., 1964), pp. 288-306' format."""
    # Extract components
    vol = re.search(r"Vol\.\s*(\d+)", issue_str)
    num = re.search(r"No\.\s*(\d+)", issue_str)
    month = re.search(r"\((\w+)\.,?\s*(\d{4})\)", issue_str)
    pages = re.search(r"pp\.\s*([\d-]+)", issue_str)

    result = {}
    if vol:
        result["volume"] = vol.group(1)
    if num:
        result["issue"] = num.group(1)
    if pages:
        result["page"] = pages.group(1)
    if month:
        month_name = month.group(1)
        year = int(month.group(2))
        result["published-print"] = {"date-parts": [[year, MONTHS.get(month_name, 1)]]}

    return result


def main():
    jstor = json.load(sys.stdin)

    # Parse issue string
    parsed = parse_issue(jstor.get("contentIssue", ""))

    # Extract DOI ID for JSTOR stable URL
    doi = jstor["objectDOI"]
    doi_prefix, doi_id = doi.split("/", 1)

    # Build DOI format
    doi_meta = {
        "publisher": jstor.get("contentPublisher"),
        "DOI": doi,
        "type": "journal-article",
        "created": None,

        "source": "JSTOR",
        "title": jstor.get("itemTitle"),
        "prefix": doi_prefix,

        **parsed,

        "author": [
            # JSTOR doesn't provide author info in this format
            {"given": None, "family": None, "sequence": "first", "affiliation": []}
        ],
        "container-title": jstor.get("contentName"),
        "language": "en",
        "link": [
            {
                "URL": f"https://www.jstor.org/stable/{doi_id}",
                "content-type": "unspecified",
                "content-version": "vor",
                "intended-application": "unspecified",
            }
        ],
        "resource": {"primary": {"URL": f"https://www.jstor.org/stable/{doi_id}"}},
        "URL": None,
    }

    json.dump(doi_meta, sys.stdout, indent=2)
    print()


if __name__ == "__main__":
    main()
